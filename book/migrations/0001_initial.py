# Generated by Django 4.2.1 on 2023-06-11 17:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BookStoreModel",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("book_name", models.CharField(max_length=30)),
                ("author", models.CharField(max_length=30)),
                (
                    "catgory",
                    models.CharField(
                        choices=[
                            ("Mystery", "Mystery"),
                            ("Thriller", "Thriller"),
                            ("Sci-Fi", "Sci-Fi"),
                            ("Humor", "Humor"),
                            ("Horror", "Horror"),
                        ],
                        max_length=20,
                    ),
                ),
                ("first_pub", models.DateTimeField(auto_now_add=True)),
                ("last_pub", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="EmployeeModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30, null=True)),
                ("city", models.CharField(max_length=30, null=True)),
                ("designation", models.CharField(max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Friend",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("school", models.CharField(max_length=30)),
                ("section", models.CharField(max_length=30)),
                ("attendence", models.BooleanField(max_length=30)),
                ("hw", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("city", models.CharField(max_length=30)),
                ("email", models.EmailField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Studentinfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("city", models.CharField(max_length=50)),
                ("section", models.CharField(max_length=30)),
                ("payment", models.IntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Teacherinfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("city", models.CharField(max_length=50)),
                ("department", models.CharField(max_length=30)),
                ("salary", models.IntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ManagerModel",
            fields=[
                (
                    "employeemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="book.employeemodel",
                    ),
                ),
                ("take_interview", models.BooleanField(null=True)),
                ("hiring", models.BooleanField(null=True)),
            ],
            bases=("book.employeemodel",),
        ),
        migrations.CreateModel(
            name="Passport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pass_number", models.IntegerField(default=None)),
                ("page", models.IntegerField(default=None)),
                ("validity", models.IntegerField(default=None)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="book.person"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="me",
            fields=[],
            options={
                "ordering": ["id"],
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("book.friend",),
        ),
    ]
